name: CI

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  plan:
    # The type of runner that the job will run on
    name: Terraform plan
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Hashicorp - Terraform setup
        uses: hashicorp/setup-terraform@v3.1.2

      # To speed up the workflow, we cache the .terraform directory and terrraform providers
      # To avoid redownloading the providers everytime the workflow runs
      - name: Cache Terraform providers
        uses: terraform-cache/terraform-cache@v1

      - name: Configure AWS Credentials for github actions
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          audience: sts.amazonaws.com
          aws-region: ${{secrets.AWS_REGION}}
          role-to-assume: ${{secrets.ROLE_TO_ASSUME}} #change to reflect IAM roleâ€™s ARN

      # Runs a set of commands using the runner's shell
      - name: Initialize project and view terraform plan
        run: |
          terraform fmt -recursive
          terraform init
          terraform plan

  deploy:
    name: Terraform apply
    needs: plan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials for github actions
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          audience: sts.amazonaws.com
          aws-region: ${{secrets.AWS_REGION}}
          role-to-assume: ${{secrets.ROLE_TO_ASSUME}}
      - name: Initialize project and deploy to AWS
        run: |
          terraform fmt -recursive
          terraform init
          terraform validate
          terraform apply
